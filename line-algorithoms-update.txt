#include <stdio.h>
#include <GL/gl.h>
#include <GL/glut.h>
#include <math.h>

int X1,Y1,X2,Y2;
void inputData()
{
    printf("Enter Initial point 1: ");
    scanf("%d",&X1);
    printf("Enter Initial point 2: ");
    scanf("%d",&Y1);
    printf("Enter Final point 1: ");
    scanf("%d",&X2);
    printf("Enter Final point 2: ");
    scanf("%d",&Y2);

}
void DDA(void)
{
glClear (GL_COLOR_BUFFER_BIT);
glColor3f (0.0, 0.0, 0.0);
glPointSize(3.0);
int m=0,dy=0,dx=0,xEnd=0;
float x=0,y=0;
m= (Y2-Y1)/(X2-X1);
dy=Y2-Y1;dx=X2-X1;
if(dx<0)
{
    x = X2;
    y = Y2;
    xEnd = X1;
}
else if(dx>=0)
{
    x = X1;
    y = Y1;
    xEnd = X2;
}
while(x<xEnd)
{
    x++;
    y = y+m;
    glBegin(GL_POINTS);
    glVertex2i(x,round(y));
    glEnd();
}
glFlush ();
}

void Bresenham(void)
{
glClear (GL_COLOR_BUFFER_BIT);
glColor3f (0.0, 0.0, 0.0);
glPointSize(3.0);
int d=0,dy=0,dx=0,xEnd=0,inc1=0,inc2=0;
float x=0,y=0;
dy=Y2-Y1;dx=X2-X1;
inc1 = 2 * dy;
inc2 = 2 * (dy-dx);
d = inc1-dx;
if(dx<0)
{
    x = X2;
    y = Y2;
    xEnd = X1;
    glVertex2i(x,round(y));
}
else if(dx>=0)
{
    x = X1;
    y = Y1;
    xEnd = X2;
    glVertex2i(x,round(y));
}
while(x<xEnd)
{
    glBegin(GL_POINTS);
    glVertex2i(x,round(y));
    glEnd();
    if(d<0)
    {
        d = d + inc1;
    }
    else
    {
        d = d + inc2;
    }
    y++;
    x++;
}
glFlush ();
}

void myInit (void)
{
glClearColor(1.0, 1.0, 1.0, 0.0);
glColor3f(0.0f, 0.0f, 0.0f);
glPointSize(4.0);
glMatrixMode(GL_PROJECTION);
glLoadIdentity();
gluOrtho2D(0.0, 640.0, 0.0, 480.0);
}

main(int argc, char** argv)
{
    glutInit(&argc, argv);
    glutInitDisplayMode (GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize (640, 480);
    glutInitWindowPosition (100, 150);
    glutCreateWindow ("Line Algorithm's");
    int choice;
    printf("Press 1 for DDA Algorithm\nPress 2 for Bresenham Algorithm\nPress any alphabet for exit\nInput your choice: ");
    scanf("%d",&choice);
    if(choice == 1)
    {
        inputData();
        glutDisplayFunc(DDA);
        myInit ();
        glutMainLoop();

    }
    else if(choice == 2)
    {
        inputData();
        glutDisplayFunc(Bresenham);
        myInit ();
        glutMainLoop();
    }
    else
    {
        return 0;
    }

}

